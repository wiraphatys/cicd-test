{
	"info": {
		"_postman_id": "dd7c463f-2d4f-493a-8229-3e2881476a48",
		"name": "MRS Automate Testing 1",
		"description": "An automate testing for basic requirement of Massage Reservation System\n\n- run via terminal using \" newman \"\n    \n- newman run .json",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29531551"
	},
	"item": [
		{
			"name": "1.1 register - validation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"postman.setNextRequest(\"1.2 user - register\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\" : \"validation_check\",\n    \"email\": \"invalid_email.com\",\n    \"password\": \"123456\",\n    \"role\" : \"user\",\n    \"tel\" : \"1234567890\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/auth/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2 user - register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"TOKEN\", pm.response.json().token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"2.1 user - login\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\" : \"register_test\",\n    \"email\": \"register_test@gmail.com\",\n    \"password\": \"12345678\",\n    \"role\" : \"user\",\n    \"tel\" : \"1234567890\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/auth/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.1 user - login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"TOKEN\", pm.response.json().token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"2.2 user - get log current user\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"TOKEN\", null);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"register_test@gmail.com\",\n    \"password\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/auth/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2 user - get log current user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"user_id\", pm.response.json().data._id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"3 user - view all massages\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/auth/me",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"auth",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "3 user - view all massages",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"4.1 user - create invalid reservation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/massages",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"massages"
					]
				}
			},
			"response": []
		},
		{
			"name": "4.1 user - create invalid reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							"",
							"postman.setNextRequest(\"4.2 user - create 1st reservation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"resvDate\": \"01_01_2024\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/massages/65e1ccd8455d87f8f3f392f5/reservations",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"massages",
						"65e1ccd8455d87f8f3f392f5",
						"reservations"
					]
				}
			},
			"response": []
		},
		{
			"name": "4.2 user - create 1st reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"reservation_id_1\", pm.response.json().data._id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"postman.setNextRequest(\"4.3 user - create 2nd reservation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"resvDate\": \"2024-03-04T10:00:00Z\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/massages/65e1ccd8455d87f8f3f392f5/reservations",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"massages",
						"65e1ccd8455d87f8f3f392f5",
						"reservations"
					]
				}
			},
			"response": []
		},
		{
			"name": "4.3 user - create 2nd reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"reservation_id_2\", pm.response.json().data._id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"postman.setNextRequest(\"4.3 user - create 3rd reservation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"resvDate\": \"2025-03-04T10:00:00Z\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/massages/65e1ccd8455d87f8f3f392f5/reservations",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"massages",
						"65e1ccd8455d87f8f3f392f5",
						"reservations"
					]
				}
			},
			"response": []
		},
		{
			"name": "4.3 user - create 3rd reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"reservation_id_3\", pm.response.json().data._id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"postman.setNextRequest(\"4.4 user - create exceed reservation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"resvDate\": \"2026-03-04T10:00:00Z\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/massages/65e1ccd8455d87f8f3f392f5/reservations",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"massages",
						"65e1ccd8455d87f8f3f392f5",
						"reservations"
					]
				}
			},
			"response": []
		},
		{
			"name": "4.4 user - create exceed reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"postman.setNextRequest(\"5 user - update reservation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"resvDate\": \"2030-03-04T10:00:00Z\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/massages/65e1ccd8455d87f8f3f392f5/reservations",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"massages",
						"65e1ccd8455d87f8f3f392f5",
						"reservations"
					]
				}
			},
			"response": []
		},
		{
			"name": "5 user - update reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"6 user - delete reservation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"resvDate\": \"2040-02-28T10:00:00Z\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/reservations/{{reservation_id_1}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"reservations",
						"{{reservation_id_1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "6 user - delete reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"reservation_id_1\", null);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"7 user - logout\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/reservations/{{reservation_id_1}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"reservations",
						"{{reservation_id_1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "7 user - logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"TOKEN\", null);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"8 admin - login\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/auth/logout",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "8 admin - login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"TOKEN\", pm.response.json().token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"9 admin - view all reservation\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"TOKEN\", null);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"y.wiraphat@gmail.com\",\n    \"password\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/auth/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "9 admin - view all reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"10 admin - update reservation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/reservations/{{reservation_id_2}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"reservations",
						"{{reservation_id_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "10 admin - update reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"11.1 admin - delete 2nd reservation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"resvDate\": \"2040-02-28T10:00:00Z\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/reservations/{{reservation_id_2}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"reservations",
						"{{reservation_id_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "11.1 admin - delete 2nd reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"reservation_id_2\", null);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"11.2 admin - delete 3rd reservation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/reservations/{{reservation_id_2}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"reservations",
						"{{reservation_id_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "11.2 admin - delete 3rd reservation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"reservation_id_3\", null);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"12 admin - delete user test\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/reservations/{{reservation_id_3}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"reservations",
						"{{reservation_id_3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 admin - delete user test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"13 admin - logout\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/users/{{user_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "13 admin - logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"TOKEN\", null);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/auth/logout",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://bankyohovineyard.us-east-1.elasticbeanstalk.com",
			"type": "string"
		},
		{
			"key": "TOKEN",
			"value": "null"
		},
		{
			"key": "user_id",
			"value": "null",
			"type": "string"
		},
		{
			"key": "reservation_id_1",
			"value": "null"
		},
		{
			"key": "reservation_id_2",
			"value": "null",
			"type": "string"
		},
		{
			"key": "reservation_id_3",
			"value": "null",
			"type": "string"
		}
	]
}
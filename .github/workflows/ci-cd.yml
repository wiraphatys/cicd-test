name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  MONGODB_URI: ${{ secrets.MONGODB_URI }}

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Clear npm cache
      run: npm cache clean --force
        
    - name: Update packages
      run: |
        npm install uuid@latest
        npm install debug@latest
        
    - name: Build backend
      run: |
        cd backend
        npm ci
        npm run build
        
    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build
        
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        
    # - name: Fix vulnerabilities
    #   run: npm audit fix
        
    # - name: Test backend
    #   run: |
    #     cd backend
    #     npm ci
    #     npm test
        
    - name: Test frontend
      run: |
        cd frontend
        npm ci
        npm test
        
  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: npm install
        
    - name: Clean install dependencies
      run: |
        rm -rf node_modules
        npm ci
        
    - name: Deploy to production
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      run: |
        npm install -g vercel@latest
        vercel --prod --token=${VERCEL_TOKEN}